openapi: 3.1.0
info:
  title: Swagger Petstore - OpenAPI 3.1
  description: |-
    This is a sample airline industry middleware API part of a PoC intended to show how to interact with APIs via AI chat assistants.
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /flight/scheduleByDates:
    get:
      summary: Find flights in a period of time
      description: Returns the scheduled flights for the given period
      operationId: flightScheduleByDates
      parameters:
        - in: query
          name: startDate
          description: Start date to filter by
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: endDate
          description: End date to filter by
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flight"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flight"
        "400":
          description: Invalid date
  /booking:
    post:
      summary: Place an booking for a passenger and flight
      description: Place a new booking in the store
      operationId: placebooking
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Invalid input
  /booking/findByFLight:
    get:
      summary: Search bookings by flight details
      description: Returns bookings for the given flight details
      operationId: searchBookingsByFlight
      parameters:
        - name: flightNumber
          in: query
          description: Flight number to filter by
          required: false
          schema:
            type: string
        - name: departureTime
          in: query
          description: Departure time to filter by
          required: false
          schema:
            type: string
            format: date-time
        - name: departureAirport
          in: query
          description: Departure airport to filter by
          required: false
          schema:
            type: string
        - name: arrivalTime
          in: query
          description: Arrival time to filter by
          required: false
          schema:
            type: string
            format: date-time
        - name: arrivalAirport
          in: query
          description: Arrival airport to filter by
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
        "400":
          description: Invalid input
  /passenger/notify:
    post:
      summary: Notify a passenger
      description: Send a notification to a passenger
      operationId: notifyPassenger
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
components:
  schemas:
    Flight:
      type: object
      properties:
        flightNumber:
          type: string
          examples: ["AB1733"]
        departureTime:
          type: string
          format: date-time
        departureAirport:
          type: string
          examples: ["FCO"]
        arrivalTime:
          type: string
          format: date-time
        arrivalAirport:
          type: string
          examples: ["ZRH"]
    Passenger:
      type: object
      properties:
        name:
          type: string
          examples: ["John Doe"]
        email:
          type: string
          examples: ["some.email@somedomain.com"]
    Booking:
      type: object
      properties:
        code:
          type: string
          examples: ["ER234F"]
        passenger:
          $ref: "#/components/schemas/Passenger"
        flight:
          $ref: "#/components/schemas/Flight"
    Notification:
      type: object
      properties:
        message:
          type: string
          examples: ["Gate changed."]
        passenger:
          $ref: "#/components/schemas/Passenger"
