openapi: 3.0.0
info:
  version: 1.0.0
  title: Simplified Strapi API
  description: 'A simplified version of the Strapi API focusing on specific endpoints'

servers:
  - url: http://localhost:1337/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        data:
          nullable: true
        error:
          type: object
          properties:
            status:
              type: integer
            name:
              type: string
            message:
              type: string
            details:
              type: object

    DesignRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            primaryColor:
              type: string
            secondaryColor:
              type: string

    DesignResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
            attributes:
              type: object
              properties:
                primaryColor:
                  type: string
                secondaryColor:
                  type: string
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time

    SiteConfigRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            siteName:
              type: string
            siteDescription:
              type: string

    SiteConfigResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
            attributes:
              type: object
              properties:
                siteName:
                  type: string
                siteDescription:
                  type: string
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time

    ContentPageRequest:
      type: object
      properties:
        data:
          type: object
          required:
            - title
            - route
          properties:
            title:
              type: string
            route:
              type: string
            content:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ContentTextComponent'
                  - $ref: '#/components/schemas/ContentImageComponent'
                  - $ref: '#/components/schemas/ContentContactFormComponent'
                  - $ref: '#/components/schemas/ContentCtaComponent'
                  - $ref: '#/components/schemas/ContentLocationComponent'
                  - $ref: '#/components/schemas/ContentStageComponent'
                  - $ref: '#/components/schemas/ContentTeaserComponent'
                  - $ref: '#/components/schemas/ContentYouTubeComponent'
                  - $ref: '#/components/schemas/ContentSvgOverlayComponent'
                  - $ref: '#/components/schemas/ContentSectionComponent'
                  - $ref: '#/components/schemas/ContentGalleryComponent'
                  - $ref: '#/components/schemas/ContentVideoComponent'
                  - $ref: '#/components/schemas/ContentSignUpComponent'
                  - $ref: '#/components/schemas/ContentLoginComponent'
                  - $ref: '#/components/schemas/ContentChangeEmailComponent'
                  - $ref: '#/components/schemas/ContentForgotPasswordComponent'
                  - $ref: '#/components/schemas/ContentResetPasswordComponent'

    ContentPageResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
            attributes:
              $ref: '#/components/schemas/ContentPage'

    ContentPage:
      type: object
      properties:
        title:
          type: string
          description: The title of the content page
        route:
          type: string
          description: The URL route for the content page
        content:
          type: array
          description: An array of content components that make up the page
          items:
            oneOf:
              - $ref: '#/components/schemas/ContentTextComponent'
              - $ref: '#/components/schemas/ContentImageComponent'
              - $ref: '#/components/schemas/ContentContactFormComponent'
              - $ref: '#/components/schemas/ContentCtaComponent'
              - $ref: '#/components/schemas/ContentLocationComponent'
              - $ref: '#/components/schemas/ContentStageComponent'
              - $ref: '#/components/schemas/ContentTeaserComponent'
              - $ref: '#/components/schemas/ContentYouTubeComponent'
              - $ref: '#/components/schemas/ContentSvgOverlayComponent'
              - $ref: '#/components/schemas/ContentSectionComponent'
              - $ref: '#/components/schemas/ContentGalleryComponent'
              - $ref: '#/components/schemas/ContentVideoComponent'
              - $ref: '#/components/schemas/ContentSignUpComponent'
              - $ref: '#/components/schemas/ContentLoginComponent'
              - $ref: '#/components/schemas/ContentChangeEmailComponent'
              - $ref: '#/components/schemas/ContentForgotPasswordComponent'
              - $ref: '#/components/schemas/ContentResetPasswordComponent'
        createdAt:
          type: string
          format: date-time
          description: The date and time when the content page was created
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the content page was last updated

    ContentTextComponent:
      type: object
      description: A component for displaying text content
      properties:
        __component:
          type: string
          enum: ['content.text']
        text:
          type: string
          description: The text content to be displayed

    ContentImageComponent:
      type: object
      description: A component for displaying an image
      properties:
        __component:
          type: string
          enum: ['content.image']
        image:
          $ref: '#/components/schemas/UploadFile'
        altText:
          type: string
          description: Alternative text for the image

    ContentContactFormComponent:
      type: object
      description: A component for displaying a contact form
      properties:
        __component:
          type: string
          enum: ['content.contact-form']
        title:
          type: string
          description: The title of the contact form
        emailPlaceholder:
          type: string
          description: Placeholder text for the email input field
        messagePlaceholder:
          type: string
          description: Placeholder text for the message input field
        submitButtonText:
          type: string
          description: Text to display on the submit button

    ContentCtaComponent:
      type: object
      description: A component for displaying a call-to-action button
      properties:
        __component:
          type: string
          enum: ['content.cta']
        text:
          type: string
          description: The text to display on the CTA button
        url:
          type: string
          description: The URL the CTA button should link to

    ContentLocationComponent:
      type: object
      description: A component for displaying location information
      properties:
        __component:
          type: string
          enum: ['content.location']
        address:
          type: string
          description: The address to display
        mapUrl:
          type: string
          description: URL to a map showing the location

    ContentStageComponent:
      type: object
      description: A component for displaying a stage or hero section
      properties:
        __component:
          type: string
          enum: ['content.stage']
        title:
          type: string
          description: The main title for the stage
        subtitle:
          type: string
          description: A subtitle or additional text for the stage
        backgroundImage:
          $ref: '#/components/schemas/UploadFile'

    ContentTeaserComponent:
      type: object
      description: A component for displaying a teaser or preview of content
      properties:
        __component:
          type: string
          enum: ['content.teaser']
        title:
          type: string
          description: The title of the teaser
        description:
          type: string
          description: A brief description or preview text
        image:
          $ref: '#/components/schemas/UploadFile'

    ContentYouTubeComponent:
      type: object
      description: A component for embedding a YouTube video
      properties:
        __component:
          type: string
          enum: ['content.youtube']
        videoId:
          type: string
          description: The YouTube video ID
        autoplay:
          type: boolean
          description: Whether the video should autoplay

    ContentSvgOverlayComponent:
      type: object
      description: A component for displaying an SVG overlay
      properties:
        __component:
          type: string
          enum: ['content.svg-overlay']
        svgContent:
          type: string
          description: The SVG content as a string

    ContentSectionComponent:
      type: object
      description: A component for grouping other components into a section
      properties:
        __component:
          type: string
          enum: ['content.section']
        title:
          type: string
          description: The title of the section
        components:
          type: array
          description: An array of components within this section
          items:
            $ref: '#/components/schemas/ContentPage/properties/content/items'

    ContentGalleryComponent:
      type: object
      description: A component for displaying a gallery of images
      properties:
        __component:
          type: string
          enum: ['content.gallery']
        images:
          type: array
          items:
            $ref: '#/components/schemas/UploadFile'

    ContentVideoComponent:
      type: object
      description: A component for displaying a video
      properties:
        __component:
          type: string
          enum: ['content.video']
        video:
          $ref: '#/components/schemas/UploadFile'
        poster:
          $ref: '#/components/schemas/UploadFile'

    ContentSignUpComponent:
      type: object
      description: A component for displaying a sign-up form
      properties:
        __component:
          type: string
          enum: ['content.sign-up']
        title:
          type: string
          description: The title of the sign-up form
        submitButtonText:
          type: string
          description: Text to display on the submit button

    ContentLoginComponent:
      type: object
      description: A component for displaying a login form
      properties:
        __component:
          type: string
          enum: ['content.login']
        title:
          type: string
          description: The title of the login form
        submitButtonText:
          type: string
          description: Text to display on the submit button

    ContentChangeEmailComponent:
      type: object
      description: A component for displaying a form to change email
      properties:
        __component:
          type: string
          enum: ['content.change-email']
        title:
          type: string
          description: The title of the change email form
        submitButtonText:
          type: string
          description: Text to display on the submit button

    ContentForgotPasswordComponent:
      type: object
      description: A component for displaying a forgot password form
      properties:
        __component:
          type: string
          enum: ['content.forgot-password']
        title:
          type: string
          description: The title of the forgot password form
        submitButtonText:
          type: string
          description: Text to display on the submit button

    ContentResetPasswordComponent:
      type: object
      description: A component for displaying a reset password form
      properties:
        __component:
          type: string
          enum: ['content.reset-password']
        title:
          type: string
          description: The title of the reset password form
        submitButtonText:
          type: string
          description: Text to display on the submit button

    UploadFile:
      type: object
      description: Represents an uploaded file (image, document, etc.)
      properties:
        id:
          type: number
        name:
          type: string
        url:
          type: string
        mime:
          type: string
        size:
          type: number
        width:
          type: number
        height:
          type: number

    NavigationMenuRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            title:
              type: string
            items:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  url:
                    type: string

    NavigationMenuResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
            attributes:
              type: object
              properties:
                title:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      url:
                        type: string
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time

    FooterRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            content:
              type: string

    FooterResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
            attributes:
              type: object
              properties:
                content:
                  type: string
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time

paths:
  /designs:
    get:
      summary: Get all designs
      description: Retrieve a list of all designs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DesignResponse'
    post:
      summary: Create a new design
      description: Create a new design with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignResponse'

  /designs/{id}:
    get:
      summary: Get a specific design
      description: Retrieve a specific design by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignResponse'
    put:
      summary: Update a design
      description: Update a specific design by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignResponse'

  /site-config:
    get:
      summary: Get site configuration
      description: Retrieve the current site configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigResponse'
    put:
      summary: Update site configuration
      description: Update the site configuration with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConfigRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfigResponse'

  /content-pages:
    get:
      summary: Get all content pages
      description: Retrieve a list of all content pages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContentPageResponse'
    post:
      summary: Create a new content page
      description: Create a new content page with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPageRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPageResponse'

  /content-pages/{id}:
    get:
      summary: Get a specific content page
      description: Retrieve a specific content page by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPageResponse'
    put:
      summary: Update a content page
      description: Update a specific content page by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPageRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPageResponse'

  /navigation-menus:
    get:
      summary: Get all navigation menus
      description: Retrieve a list of all navigation menus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NavigationMenuResponse'
    post:
      summary: Create a new navigation menu
      description: Create a new navigation menu with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavigationMenuRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationMenuResponse'

  /navigation-menus/{id}:
    get:
      summary: Get a specific navigation menu
      description: Retrieve a specific navigation menu by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationMenuResponse'
    put:
      summary: Update a navigation menu
      description: Update a specific navigation menu by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavigationMenuRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationMenuResponse'

  /footer:
    get:
      summary: Get footer
      description: Retrieve the current footer content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterResponse'
    put:
      summary: Update footer
      description: Update the footer content with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FooterRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterResponse'

security:
  - bearerAuth: []